<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:component-scan base-package="package com.cmpe282.lab3.controller" />
	<mvc:annotation-driven />
	<aop:aspectj-autoproxy /> 
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<bean id="service" class="com.cmpe282.lab3.service.Service"></bean>
	<bean id="dynamoService" class="com.cmpe282.lab3.service.DynamoService"></bean>
	<bean id="dynamoConnection" class="com.cmpe282.lab3.service.DynamoConnection"></bean>
	<bean id="userProfileService" class="com.cmpe282.lab3.service.UserProfileService"></bean>
	<bean id="recommendationService" class="com.cmpe282.lab3.service.RecommendationService"></bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://cmpe282lab3.cuq1mfe3ymlp.us-west-1.rds.amazonaws.com/lab3" />
		<property name="username" value="nikhil" />
		<property name="password" value="awsmysql" />
	</bean>

	<bean name="memcachedClient" class="com.google.code.ssm.CacheFactory">
		<property name="cacheClientFactory">
			<bean name="cacheClientFactory"
				class="com.google.code.ssm.providers.elasticache.MemcacheClientFactoryImpl" />
		</property>
		<property name="addressProvider">
			<bean class="com.google.code.ssm.config.DefaultAddressProvider">
				<property name="address" value="localhost:11211" />
			</bean>
		<!-- 	<bean class="com.google.code.ssm.config.DefaultAddressProvider">
     // set only single address to configuration endpoint
     <property name="address" value="xxxxx.yyyyy.cfg.zzzz.cache.amazonaws.com:11211"/>
 </bean> 
 
 <bean class="com.google.code.ssm.providers.elasticache.ElastiCacheConfiguration">
    // use dynamic configuration and fetch configuration of nodes from cluster 
    //(auto discovery node feature is enabled)
     <property name="clientMode" value="#{T(net.spy.memcached.ClientMode).Dynamic}" />
 </bean>	-->
		</property>
		<property name="configuration">
			<bean
				class="com.google.code.ssm.providers.elasticache.ElastiCacheConfiguration">
				<property name="consistentHashing" value="true" />
				<!-- in this use static configuration and do not try to fetch configuration 
					of nodes from cluster (auto discovery node feature is disabled) -->
				<property name="clientMode" value="#{T(net.spy.memcached.ClientMode).Static}" />
				 <property name="useBinaryProtocol" value="true" />
			</bean>
		</property>
	</bean>

<mvc:resources mapping="/*" location="/*" />

<mvc:annotation-driven />
</beans>